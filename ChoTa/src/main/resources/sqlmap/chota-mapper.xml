<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="chota">

<!-- 프로필사진 업데이트 -->
<update id="profile_update">
update member
set profile = #{profile}
where userid = #{userid}
</update>

<!-- 이벤트 참여 -->
<update id="event_check">
update events
set success_day = sysdate, succcess_cnt = #{succcess_cnt}
where member_id  = #{member_id}
</update>

<!-- 이벤트 첫 참여 인서트 -->
<insert id="eventinsert">
insert into events (member_id, succcess_cnt)
values (#{userid}, 0)
</insert>

<!-- 이벤트 참여 여뷰 확인 -->
<select id="eventlist" resultType="chotamember.EventVO">
select *
from events
where member_id = #{userid}
</select>

<!-- 비밀번호찾기지만 폰번호로 정보확인  -->
<select id="pw_find1" resultType="integer">
select count(*) from member where phone=#{phone}

</select>

<!-- 전 비밀번호 중복체크 -->
<select id="pw_check" resultType="integer">
select count(*) from member where userpw = #{userpw} and phone = #{phone}
</select>

<!-- 비밀번호찾기지만 비밀번호 재설정 -->
<update id="pw_find2">
update member set userpw = #{userpw}
where phone = #{phone} 

</update>

<!-- 회원가입 social 컬럼 없어도됨-->
<insert id="join" >
insert into member(userid, name, userpw, phone, parent_phone, gender,birth, profile
				, nickname, social, member_grp, grade_class_code, school_id, teacher) 
values (#{userid}, #{name}, #{userpw, jdbcType=VARCHAR}, #{phone}, #{parent_phone, jdbcType=VARCHAR}
		, #{gender}, to_date(#{birth}, 'YYYY-MM-DD'), #{profile, jdbcType=VARCHAR}, #{nickname, jdbcType=VARCHAR}
		, #{social}, #{member_grp}, to_number(#{grade_class_code}), to_number(#{school_id}), #{teacher, jdbcType=VARCHAR})
			
		
</insert>

<!-- 아이디 존재여부 확인 -->
<select id="id_check" resultType="integer">
select count(*) from member where userid=#{userid}
</select>

<!-- 상세보기 -->
<select id="detail" resultType="chotamember.MemberVO">
select m.*, s.* from member  m left outer join school s
on m.school_id = s.school_id
where userid = #{id} 
</select>

<!-- 선생님반 목록 -->
<select id="banlist" resultType="chotamember.MemberVO">
select *
from member
where member_grp like 'S'
and teacher like #{name}
</select> 

<!-- 일반로그인 -->
<select id="login" resultType="chotamember.MemberVO">
select m.*, s.* from member  m left outer join school s
on m.school_id = s.school_id
where userid = #{userid}
AND NVL(userpw,0) = NVL(#{userpw,jdbcType=VARCHAR},0)
</select>

<!-- 소셜로그인 -->
<select id="social" resultType="chotamember.MemberVO">
select m.*, s.* from member  m left outer join school s
on m.school_id = s.school_id
where userid = #{userid} 
</select>

<!-- 아이디찾기 -->
<select id="id_find" resultType="chotamember.MemberVO">
select * from member where name = #{name} and phone = #{phone} and to_char(birth, 'YYYY-MM-DD') = #{birth}


</select>

<!-- 학교검색하여 학교아이디 담기 -->
<select id="school_chk" resultType="String">
select school_id from school where school_name = #{school_name}

</select>

</mapper>